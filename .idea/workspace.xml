<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="CargoProjects">
    <cargoProject FILE="$PROJECT_DIR$/contract/Cargo.toml" />
    <cargoProject FILE="$PROJECT_DIR$/contract/crates/berry-contract-domain/Cargo.toml" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="bf413844-a797-4645-a1eb-8a6dee99a121" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Rust File" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;tverdoy&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;git@github.com:tverdoy/berry.git&quot;,
    &quot;accountId&quot;: &quot;e01f9a0c-b6c4-4002-bff9-c493c50cb4f8&quot;
  }
}</component>
  <component name="MacroExpansionManager">
    <option name="directoryName" value="fo2i1t4t" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 4
}</component>
  <component name="ProjectId" id="2l73wxQMUWrvBf9yuMC3wS9MGJy" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "Cargo.Install grcov [contract].executor": "Run",
    "Cargo.Test song::test.executor": "Run",
    "Cargo.Test test_add_song.executor": "Run",
    "Cargo.Test.executor": "Run",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.rust.reset.selective.auto.import": "true",
    "Taskfile.Check code.executor": "Run",
    "Taskfile.Code check.executor": "Run",
    "Taskfile.Format code.executor": "Run",
    "git-widget-placeholder": "dev",
    "last_opened_file_path": "/Users/dimatverdoy/GolandProjects/berry",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_package_manager_path": "npm",
    "org.rust.cargo.project.model.PROJECT_DISCOVERY": "true",
    "org.rust.cargo.project.model.impl.CargoExternalSystemProjectAware.subscribe.first.balloon": "",
    "org.rust.first.attach.projects": "true",
    "settings.editor.selected.configurable": "preferences.pluginManager"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/contract/src" />
    </key>
  </component>
  <component name="RunManager" selected="Cargo.Test">
    <configuration name="Test song::test" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package berry-contract-domain --lib models::song::test" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/contract/crates/berry-contract-domain" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test test_add_song" type="CargoCommandRunConfiguration" factoryName="Cargo Command" temporary="true">
      <option name="command" value="test --package contract --test song test_add_song -- --exact" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/contract" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test" type="CargoCommandRunConfiguration" factoryName="Cargo Command">
      <option name="command" value="test" />
      <option name="workingDirectory" value="file://$PROJECT_DIR$/contract" />
      <envs />
      <option name="emulateTerminal" value="true" />
      <option name="channel" value="DEFAULT" />
      <option name="requiredFeatures" value="true" />
      <option name="allFeatures" value="false" />
      <option name="withSudo" value="false" />
      <option name="buildTarget" value="REMOTE" />
      <option name="backtrace" value="SHORT" />
      <option name="isRedirectInput" value="false" />
      <option name="redirectInputPath" value="" />
      <method v="2">
        <option name="CARGO.BUILD_TASK_PROVIDER" enabled="true" />
      </method>
    </configuration>
    <configuration name="Check code" type="TaskRunConfiguration" factoryName="TaskRunConfiguration">
      <taskfile taskPath="" filename="$PROJECT_DIR$/contract/Taskfile.yml" task="check-code" workingDirectory="" arguments="" pty="false">
        <envs />
        <vars />
      </taskfile>
      <method v="2" />
    </configuration>
    <configuration name="Format code" type="TaskRunConfiguration" factoryName="TaskRunConfiguration">
      <taskfile taskPath="" filename="$PROJECT_DIR$/contract/Taskfile.yml" task="format-code" workingDirectory="" arguments="" pty="false">
        <envs />
        <vars />
      </taskfile>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Cargo.Test" />
      <item itemvalue="Cargo.Test test_add_song" />
      <item itemvalue="Cargo.Test song::test" />
      <item itemvalue="Taskfile.Check code" />
      <item itemvalue="Taskfile.Format code" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Cargo.Test test_add_song" />
        <item itemvalue="Cargo.Test song::test" />
      </list>
    </recent_temporary>
  </component>
  <component name="RustProjectSettings">
    <option name="toolchainHomeDirectory" value="$USER_HOME$/.cargo/bin" />
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="bf413844-a797-4645-a1eb-8a6dee99a121" name="Changes" comment="" />
      <created>1724517530557</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1724517530557</updated>
      <workItem from="1724517531615" duration="10443000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>